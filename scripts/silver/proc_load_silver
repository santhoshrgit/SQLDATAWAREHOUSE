/*
===============================================================================
Stored Procedure: Load Silver Layer (Bronze -> Silver)
===============================================================================
Script Purpose:
    This stored procedure performs the ETL (Extract, Transform, Load) process to 
    populate the 'silver' schema tables from the 'bronze' schema.
	Actions Performed:
		- Truncates Silver tables.
		- Inserts transformed and cleansed data from Bronze into Silver tables.
		
Parameters:
    None. 
	  This stored procedure does not accept any parameters or return any values.

Usage Example:
    EXEC Silver.load_silver;
===============================================================================
*/
--------------------------------------------------------------TABLE 1------------------------------------------------------------------------------------
------DATA STANDARIZATION -----
---INSERT ClEANED DATA BRONZE TO SILVER
create or alter procedure silver.load_silver as
begin
    DECLARE @START DATETIME, @END DATETIME
	SET @START =GETDATE()							
	DECLARE @START_TIME DATETIME, @END_TIME DATETIME
	BEGIN TRY
		PRINT '================================';
		PRINT 'LOADING SILVER LAYER';
		PRINT '================================';

		PRINT '--------------------------------';
		PRINT 'LOADING CRM';
		PRINT '--------------------------------';
		SET @START_TIME=GETDATE()
	print '>>TRUNCATING TABLE: silver.crm_cust_info'
	truncate table silver.crm_cust_info
	PRINT '>>>INSERTING TABLE: silver.crm_cust_info '
	insert into silver.crm_cust_info(
			cst_id,
			cst_key,
			cst_firstname,
			cst_lastname,
			cst_material_status,
			cst_gndr,
			cst_create_date)
	SELECT 
	cst_id,
	cst_key,
	trim(cst_firstname) AS cst_firstname,
	TRIM(cst_lastname) AS cst_lastname,
		case when upper(trim(cst_material_status))='S' then 'Single'
			 when upper(trim(cst_material_status))='M' then 'Married'
			 else 'n/a'
		end cst_material_status ,
		case when upper(trim(cst_gndr))='F' then 'Female'
			 when upper(trim(cst_gndr))='M' then 'Male'
			 else 'n/a'
		end cst_gndr,
		cst_create_date 
		from
		(SELECT *,
	ROW_NUMBER() OVER(PARTITION BY CST_ID ORDER BY CST_CREATE_DATE DESC) AS D
	FROM bronze.crm_cust_info where cst_id is not null)t where d=1
	SET @END_TIME=GETDATE()
	PRINT 'LOADING DURATION: '+CAST(DATEDIFF(second,@start_time,@end_time) as NVARCHAR)+' seconds';
	PRINT '------------------'

	--------------------------------------------------------------TABLE 2------------------------------------------------------------------------------------
	---bronze.crm_prd_info and bronze.erp_px_cat_g1v2 have same column which is prd_key and id 
	--the main thing is prd_key have underscore(_) in values but id column values have '-' so replace - to underscore
	SET @START_TIME=GETDATE()
	print '>>TRUNCATING TABLE:silver.crm_prd_info'
	truncate table silver.crm_prd_info
	PRINT '>>>INSERTING TABLE:silver.crm_prd_info '
	insert into silver.crm_prd_info(
			prd_id,
		cat_id ,
		prd_key ,
		prd_nm ,
		prd_cost ,
		prd_line,
		prd_start_dt ,
		prd_end_dt
	)
	select
	prd_id,
	replace(SUBSTRING(prd_key,1,5),'-','_')cat_id,
	SUBSTRING(prd_key,7,len(prd_key)) prd_key,--this is process to join the tables
	prd_nm,
	isnull(prd_cost,0) prd_cost,
	case  upper(trim(prd_line)) 
		when'M' then 'Mountain'
		when 'R' then 'Road'
		when 'S' then 'Other sales'
		when 'T' then 'Touring'
		else 'n/a'
		end prd_line,
	cast(prd_start_dt as date) as prd_start_dt,
	cast(lead(prd_start_dt) over(partition by prd_key order by prd_start_dt)-1 as date) as prd_end_dt
	from bronze.crm_prd_info
	SET @END_TIME=GETDATE()
	PRINT 'LOADING DURATION: '+CAST(DATEDIFF(second,@start_time,@end_time) as NVARCHAR)+' seconds';
	PRINT '------------------'
	--------------------------------------------------------------TABLE 3------------------------------------------------------------------------------------
	SET @START_TIME=GETDATE()
    
	print '>>TRUNCATING TABLE:silver.crm_sales_details'
	truncate table silver.crm_sales_details
	PRINT '>>>INSERTING TABLE:silver.crm_sales_details'
	insert into silver.crm_sales_details(
			 sls_ord_num ,
		sls_prd_key,
		sls_cust_id ,
		sls_order_dt ,
		sls_ship_dt ,
		sls_due_dt,
		sls_sales,
		sls_quantity,
		sls_price
	)
	select 
	sls_ord_num,
	sls_prd_key,
	sls_cust_id,
	case when sls_order_dt=0 or len(sls_order_dt)!=8 then null
		 else cast(cast(sls_order_dt as varchar) as date)
		 end as sls_order_dt,
	case when sls_ship_dt=0 or len(sls_ship_dt)!=8 then null
		 else cast(cast(sls_ship_dt as varchar) as date)
		 end as sls_ship_dt,
	case when sls_due_dt=0 or len(sls_due_dt)!=8 then null
		 else cast(cast(sls_due_dt as varchar) as date)
		 end as sls_due_dt,
	case when sls_sales is null or sls_sales<=0 or sls_sales!=sls_quantity*abs(sls_price)
		 then sls_quantity* abs(sls_price)
		 else sls_sales
	end sls_sales,
	sls_quantity,
	case when sls_price is null or sls_price<=0
		then sls_sales/nullif(sls_quantity,0)
		else sls_price
	end sls_price
	from bronze.crm_sales_details
	SET @END_TIME=GETDATE()
	PRINT 'LOADING DURATION: '+CAST(DATEDIFF(second,@start_time,@end_time) as NVARCHAR)+' seconds';
	PRINT '------------------'
	--------------------------------------------------------------TABLE 4------------------------------------------------------------------------------------
	--check bdate is correct or not
	--some of the bdate are future date like future year so it is totally incorrect so replace it null
	SET @START_TIME=GETDATE()
	print '====LOADING ERP===='
	print '>>TRUNCATING TABLE:silver.erp_cust_az12'
	truncate table silver.erp_cust_az12 
	PRINT '>>>INSERTING TABLE:silver.erp_cust_az12'
	insert into silver.erp_cust_az12(
			cid,
			bdate,
			gen
	)
	select 
	case when cid like 'NAS%' then SUBSTRING(cid,4,len(cid))
		 else cid
	end as cid,
	case when bdate > GETDATE() then null
		 else bdate
	end as bdate,
	case when upper(trim(gen)) in ('M','Male') then 'Male'
		 when upper(trim(gen)) in ('F','Female') then 'Female'
		 else 'n/a'
	end as gen

	from bronze.erp_cust_az12
	SET @END_TIME=GETDATE()
	PRINT 'LOADING DURATION: '+CAST(DATEDIFF(second,@start_time,@end_time) as NVARCHAR)+' seconds';
	PRINT '------------------'
	--------------------------------------------------------------TABLE 5------------------------------------------------------------------------------------
	SET @START_TIME=GETDATE()

	print '>>TRUNCATING TABLE:silver.erp_loc_a101'
	truncate table silver.erp_loc_a101 
	PRINT '>>>INSERTING TABLE:silver.erp_loc_a101'
	insert into silver.erp_loc_a101(
			cid,
			cntry
	)
	select 
	replace(cid,'-','') cid,
	case when trim(cntry)='DE' then 'Germany'
		 when trim (cntry) in ('US','USA') then 'Unites States'
		 when trim(cntry) ='' or cntry is null then 'n/a'
		 else trim(cntry)
	end as cntry
	from bronze.erp_loc_a101 
	SET @END_TIME=GETDATE()
	PRINT 'LOADING DURATION: '+CAST(DATEDIFF(second,@start_time,@end_time) as NVARCHAR)+' seconds';
	PRINT '------------------'
	--------------------------------------------------------------TABLE 6------------------------------------------------------------------------------------
	SET @START_TIME=GETDATE()

	print '>>TRUNCATING TABLE:silver.erp_px_cat_g1v2'
	truncate table silver.erp_px_cat_g1v2
	PRINT '>>>INSERTING TABLE:silver.erp_px_cat_g1v2'
	insert into silver.erp_px_cat_g1v2(
		id,
		cat,
		subcat,
		maintenance
	)
	select
	id,
	cat,
	subcat,
	maintenance
	from bronze.erp_px_cat_g1v2
	SET @END_TIME=GETDATE()
		PRINT 'LOADING DURATION: '+CAST(DATEDIFF(second,@start_time,@end_time) as NVARCHAR)+' seconds';
		PRINT '------------------'
		SET @END=GETDATE()
		PRINT '===========LOADING SILVER LAYER IS COMPLETED============'
		PRINT 'TOTAL LOADING DURATION: '+CAST(DATEDIFF(second,@start,@end) as NVARCHAR)+' SECONDS'
	END TRY
	BEGIN CATCH
	 PRINT '========================================'
	 PRINT 'Error Message'+ error_message();
	 PRINT 'Error Message'+ cast(error_number() as nvarchar);
	 PRINT 'Error Message'+ cast(error_state() as nvarchar);
	 PRINT '======================================='

	END CATCH
end
